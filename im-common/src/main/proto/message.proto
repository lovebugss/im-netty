syntax = "proto3";

package com.itrjp.im.proto.message;
option java_multiple_files = true;

service MessageService{
  // onMessage
  rpc onMessage(Message) returns (MessageResponse){}

  // onEvent
  rpc onEvent(Event) returns (EventResponse){}

}
service ChannelService{
  // 获取频道信息
  rpc getChannelInfo (GetRequest) returns (GetResponse) {}
}
message ChannelInfo {
  int64 id = 1;
  string channelId = 2;
  int32 limit = 3;
  string filterType = 4;
}

message ChannelStateInfo{
  int64 id = 1;
  string channelId = 2;
  int32 pv = 3;
  int32 uv = 4;
  int32 maxPv = 5;
  int32 maxUv = 6;
}
message GetRequest{
  string channelId = 1;
}

message GetResponse{
  int32 code = 1;
  string message = 2;
  ChannelInfo channelInfo = 3;
}
message MessageResponse{
  int32 code = 1;
  string message = 2;
  string messageId = 3;
}

message EventResponse{
  int32 code = 1;
  string message = 2;
}

// 数据包
message Packet{
  DataType dataType = 1; // 数据类型
  int64  timestamp = 2;// 时间戳
  bytes data = 3; // 消息体
}
enum DataType{
  // 普通消息
  MSG = 0;
  // 通知消息(上下线)
  EVENT = 1;
  ACK = 2;
}
message Message{
  string channelId = 1;
  string userId = 2;
  string content = 3;
  string messageId = 4;
  int64  timestamp = 5;// 时间戳
  MessageType type = 6;

}
enum MessageType{
  TEXT = 0;
  IMAGE = 1;
  VOICE = 2;
  VIDEO = 3;
  FILE = 4;
  LOCATION = 5;
  SYSTEM = 6;
}

// 通知事件类型
enum EventType{
  ONLINE = 0;
  OFFLINE = 1;
  JOIN = 2;
  LEAVE = 3;
  MUTE = 4;
  UN_MUTE = 5;
  KICK = 6;
}

// 时间通知
message Event{
  string channelId = 1;
  string userId = 2;
  EventType type = 3; // 事件类型
  int64  timestamp = 4;// 时间戳
}

message KafkaMessage {
  DataType dataType = 1;
  bytes data = 2;
  string  from = 3;
  string  to = 4;
  int64 timestamp = 5;
  string nodeId = 6;
}

message Command{
  CommandType commandType = 1;
  bytes data = 2;
}
enum CommandType{
  SYNC = 0;
  DEL = 1;
}

message SyncCommand{
  string channelId = 1;
  string deviceId = 2;
  string messageId = 3;
}